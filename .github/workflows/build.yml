name: Build plugin

on:
  pull_request:
    branches: [devel, master]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    # Avoid send statistics
    env:
      SEND_INSTALLATION_STATISTICS: "False"

    steps:    
    - name: Checkout repository
      uses: actions/checkout@main
      with:
        ref: ${{ github.head_ref }}

    - name: Install CUDA
      uses: Jimver/cuda-toolkit@master
      id: cuda-toolkit
      with:
        cuda: '11.8.0'
        method: network
        sub-packages: '["nvcc", "toolkit"]'

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@main
      with:
        miniconda-version: "latest"
        auto-update-conda: true
        auto-activate-base: true
        activate-environment: scipion3
        python-version: "3.8"
        
    - name: Install Scipion
      working-directory: ${{ github.workspace }}/../
      run: |
        pip install --user scipion-installer
        python -m scipioninstaller -conda -noAsk scipion

    - name: Install plugin from pull request
      working-directory: ${{ github.workspace }}
      run: ../scipion/scipion3 installp -p . --devel --noBin

    - name: Install dependencies package
      working-directory: ${{ github.workspace }}
      run: ../scipion/scipion3 installb xmippDep

    - name: Cloning Xmipp
      working-directory: ${{ github.workspace }}/../
      run: git clone https://github.com/I2PC/xmipp.git
    
    # Checkout Xmipp to Pull Request branch if exists
    - name: Conditionally checkout Xmipp to ${{ github.head_ref }}
      working-directory: ${{ github.workspace }}/../xmipp
      env:
        BRANCH_NAME: ${{ github.head_ref }}
      run: |
        if [ $(git ls-remote --heads https://github.com/I2PC/xmipp.git $BRANCH_NAME | wc -l) -eq 1 ]; then
          git checkout $BRANCH_NAME
        fi
      
    - name: Compile Xmipp and show log
      working-directory: ${{ github.workspace }}/../xmipp
      env:
        BUILD_TESTS: True
        BRANCH_NAME: ${{ github.head_ref }}
      run: ../scipion/scipion3 run ./xmipp -b $BRANCH_NAME --keep-output || (cat compilation.log && false)
